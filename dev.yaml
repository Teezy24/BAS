openapi: 3.0.0
info:
  title: BAS API
  version: 2.0.0
  description: Manage Programs

servers:
  - url: http://localhost:9000/Programs

paths:
  /faculties:
    get:
      summary: Fetch all faculties
      operationId: getFaculties
      description: get list of faculties
      responses:
        '200':
          description: All faculties retrieved successfully
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref:  '#/components/schemas/Faculty'

        default:
          $ref: '#/components/responses/ErrorMessage'
    post:
      summary: Add new Faculty
      operationId: addFacutly
      description: Add new Faculty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
      responses:
        '201':
          description: Faculty added successfully
          content:
            application/json:
              schema:
                properties:
                  facultyid:
                    type: string
                    description: ID of the new Daculty
    
        default:
          $ref: '#/components/responses/ErrorMessage'


  /programs:
    get:
      summary: Fetch all programs
      operationId: getPrograms
      description: Get a list of programs
      responses:
        '200':
          description: All programs retrieved 
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Program'

        default:
          $ref: '#/components/responses/ErrorMessage'
    post:
      summary: Add a new program
      operationId: addProgram
      description: Add program to the list of programs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        '201':
          description: Program added successfully
          content:
            application/json:
              schema:
                properties:
                  programid:
                    type: string
                    description: ID of the new Program

        default:
          $ref: '#/components/schemas/ErrorMessage'

# ignore the delete until its $ref so that we can then add that funtion later 
    delete:
      summary: Delete a student
      operationId: deleteStudent
      description: Delete a student from the collection
      responses:
        '204':
          description: Student deleted successfully
        default:
          $ref: '#/components/schemas/ErrorMessage'

  /courses:
    get:
      summary: Get all courses
      operationId: getCourses
      description: Get a list of courses
      responses:
        '200':
          description: All courses retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        default:
          $ref: '#/components/responses/ErrorMessage'
    post:
      summary: Add a new course
      operationId: addCourse
      description: Add a course to the list of courses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course added successfully
          content:
            application/json:
              schema:
                properties:
                  course_code:
                    type: string
                    description: the code of the newly created course
        default:
          $ref: '#/components/responses/ErrorMessage'

#THIS IS WHERE YOU START. THIS COMPONENTS SECTION IS SELF EXPLANITORY-
#AFTER FINISHING WITH THE COMPONENTS PLEASE COPY AND PASTE THIS CODE

#AND ADD THE BULLET POINTS THAT WE MUST DO THAT ARE IN QUESTION ONE- 
#WITH ALL THOSE FUNCTIONS THEY SAID WE SHOULD DO AND THEN TELL ME WHAT-
#WE SHOULD ADD THEN WHEN WE ARE FINISHED WE JOIN QUESTION 2.
#DELETE COMMENTS FROM LINE 141-147 WHEN YOU ARE FINISHED

components:
  schemas:
    Programme:
      type: object
      required:
        - programmeCode
      properties:
        programmeCode:
          type: string
          description: the programme code of the programme
          readOnly: true
        programmeName:
          type: string
          description: the name of the programme
        faculty:
          type: string
          description: the faculty of the programme

    Student:
      type: object
      required:
        - studentNumber
      properties:
        studentNumber:
          type: integer
          description: the student number of the student
          readOnly: true
        firstname:
          type: string
          description: the first name of the student
        lastname:
          type: string
          description: the last name of the student
        emailaddress:
          type: string
          description: the email address of the student

    Course:
      type: object
      properties:
        courseCode:
          type: string
          description: the course code of the course
          readOnly: true
        courseName:
          type: string
          description: the name of the course

    StudentCourse:
      type: object
      properties:
        studentNumber:
          type: string
          description: the identifier of the student by student number
        courseCode:
          type: string
          description: the identifier of the course by course code

    Error:
      type: object
      properties:
        errorType:
          type: string
          enum:
            - BadRequest
            - Not Found
            - InternelServerError
        message:
          type: string

  paths:
    /programmes:
      post:
        summary: Add a new programme
        description: Add a new programme to the Programme
        requestBody:
          description: Programme details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programme'
        responses:
          201:
            description: Programme created successfully
          400:
            $ref: '#/components/responses/ErrorMessage'

    /programmes:
      get:
        summary: Retrieve a list of all programmes
        description: Retrieve a list of all programmes within the Programme Development Unit
        responses:
          200:
            description: List of programmes
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Programme'
          404:
            $ref: '#/components/responses/ErrorMessage'

    /programmes/{programmeCode}:
      patch:
        summary: Update an existing programme's information
        description: Update an existing programme's information according to the programme code
        parameters:
          - in: path
            name: programmeCode
            required: true
            schema:
              type: string
        requestBody:
          description: Programme details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programme'
        responses:
          200:
            description: Programme updated successfully
          400:
            $ref: '#/components/responses/ErrorMessage'
          404:
            $ref: '#/components/responses/ErrorMessage'

    /programmes/{programmeCode}:
      get:
        summary: Retrieve the details of a specific programme
        description: Retrieve the details of a specific programme by their programme code
        parameters:
          - in: path
            name: programmeCode
            required: true
            schema:
              type: string
        responses:
          200:
            description: Programme details
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Programme'
          404:
            $ref: '#/components/responses/ErrorMessage'

    /programmes/{programmeCode}:
      delete:
        summary: Delete a programme's record
        description: Delete a programme's record by their programme code
        parameters:
          - in: path
            name: programmeCode
            required: true
            schema:
              type: string
        responses:
          204:
            description: Programme deleted successfully
          404:
            $ref: '#/components/responses/ErrorMessage'

    /programmes/review:
      get:
        summary: Retrieve all programmes due for review
        description: Retrieve all programmes that are due for review
        responses:
          200:
            description: List of programmes due for review
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Programme'
          404:
            $ref: '#/components/responses/ErrorMessage'

    /programmes/faculty/{faculty}:
      get:
        summary: Retrieve all programmes belonging to the same faculty
        description: Retrieve all programmes that belong to the same faculty
        parameters:
          - in: path
            name: faculty
            required: true
            schema:
              type: string
        responses:
          200:
            description: List of programmes belonging to the same faculty
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Programme'
          404:
            $ref: '#/components/responses/ErrorMessage'